/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jouvieje_bass_BassJNI */

#ifndef _Included_jouvieje_bass_BassJNI
#define _Included_jouvieje_bass_BassJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SetConfig
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SetConfig
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetConfig
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetConfig
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SetConfigPtr
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SetConfigPtr
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetConfigPtr
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetConfigPtr
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetVersion
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ErrorGetCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ErrorGetCode
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetDeviceInfo
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetDeviceInfo
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Init
 * Signature: (IIIJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Init
  (JNIEnv *, jclass, jint, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SetDevice
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SetDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetDevice
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Free
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Free
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetInfo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetInfo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Update
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Update
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetCPU
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetCPU
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Start
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Start
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Stop
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Stop
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Pause
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Pause
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SetVolume
 * Signature: (F)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SetVolume
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_GetVolume
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1GetVolume
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_PluginLoad
 * Signature: ([BI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1PluginLoad
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_PluginFree
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1PluginFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_PluginGetInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1PluginGetInfo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Set3DFactors
 * Signature: (FFF)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Set3DFactors
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Get3DFactors
 * Signature: (Ljava/nio/FloatBuffer;JLjava/nio/FloatBuffer;JLjava/nio/FloatBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Get3DFactors
  (JNIEnv *, jclass, jobject, jlong, jobject, jlong, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Set3DPosition
 * Signature: (JJJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Set3DPosition
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Get3DPosition
 * Signature: (JJJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Get3DPosition
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Apply3D
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Apply3D
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MusicLoad
 * Signature: (ZJJIII)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MusicLoad__ZJJIII
  (JNIEnv *, jclass, jboolean, jlong, jlong, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MusicLoad
 * Signature: (Z[BJIII)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MusicLoad__Z_3BJIII
  (JNIEnv *, jclass, jboolean, jbyteArray, jlong, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MusicFree
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MusicFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleLoad
 * Signature: (ZJJIII)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleLoad__ZJJIII
  (JNIEnv *, jclass, jboolean, jlong, jlong, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleLoad
 * Signature: (Z[BJIII)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleLoad__Z_3BJIII
  (JNIEnv *, jclass, jboolean, jbyteArray, jlong, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleCreate
 * Signature: (IIIII)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleCreate
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleFree
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleSetData
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleSetData
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleGetData
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleGetData
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleGetInfo
 * Signature: (JLjava/nio/IntBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleGetInfo
  (JNIEnv *, jclass, jlong, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleSetInfo
 * Signature: (JLjava/nio/IntBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleSetInfo
  (JNIEnv *, jclass, jlong, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleGetChannel
 * Signature: (JZ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleGetChannel
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleGetChannels
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleGetChannels
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SampleStop
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SampleStop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamCreate
 * Signature: (IIIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamCreate__IIIZJ
  (JNIEnv *, jclass, jint, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamCreate
 * Signature: (IIIIJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamCreate__IIIIJ
  (JNIEnv *, jclass, jint, jint, jint, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamCreateFile
 * Signature: (ZLjava/nio/ByteBuffer;JJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamCreateFile__ZLjava_nio_ByteBuffer_2JJJI
  (JNIEnv *, jclass, jboolean, jobject, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamCreateFile
 * Signature: (Z[BJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamCreateFile__Z_3BJJI
  (JNIEnv *, jclass, jboolean, jbyteArray, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamCreateURL
 * Signature: ([BIIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamCreateURL
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamFree
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamGetFilePosition
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamGetFilePosition
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamPutData
 * Signature: (JLjava/nio/ByteBuffer;JI)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamPutData
  (JNIEnv *, jclass, jlong, jobject, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_StreamPutFileData
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1StreamPutFileData
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordGetDeviceInfo
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordGetDeviceInfo
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordInit
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordInit
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordSetDevice
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordSetDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordGetDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordGetDevice
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordFree
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordFree
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordGetInfo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordGetInfo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordGetInputName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordGetInputName
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordSetInput
 * Signature: (IIF)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordSetInput
  (JNIEnv *, jclass, jint, jint, jfloat);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordGetInput
 * Signature: (ILjava/nio/FloatBuffer;J)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordGetInput
  (JNIEnv *, jclass, jint, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_RecordStart
 * Signature: (IIIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1RecordStart
  (JNIEnv *, jclass, jint, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelBytes2Seconds
 * Signature: (IJ)D
 */
JNIEXPORT jdouble JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelBytes2Seconds
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSeconds2Bytes
 * Signature: (ID)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSeconds2Bytes
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetDevice
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSetDevice
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSetDevice
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelIsActive
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelIsActive
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetInfo
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetInfo
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetTags
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetTags
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelFlags
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelFlags
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelUpdate
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelUpdate
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelLock
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelLock
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelPlay
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelPlay
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelStop
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelStop
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelPause
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelPause
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSetAttribute
 * Signature: (IIF)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSetAttribute
  (JNIEnv *, jclass, jint, jint, jfloat);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetAttribute
 * Signature: (IILjava/nio/FloatBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetAttribute
  (JNIEnv *, jclass, jint, jint, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSlideAttribute
 * Signature: (IIFI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSlideAttribute
  (JNIEnv *, jclass, jint, jint, jfloat, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelIsSliding
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelIsSliding
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSet3DAttributes
 * Signature: (IIFFIIF)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSet3DAttributes
  (JNIEnv *, jclass, jint, jint, jfloat, jfloat, jint, jint, jfloat);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGet3DAttributes
 * Signature: (ILjava/nio/IntBuffer;JLjava/nio/FloatBuffer;JLjava/nio/FloatBuffer;JLjava/nio/IntBuffer;JLjava/nio/IntBuffer;JLjava/nio/FloatBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGet3DAttributes
  (JNIEnv *, jclass, jint, jobject, jlong, jobject, jlong, jobject, jlong, jobject, jlong, jobject, jlong, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSet3DPosition
 * Signature: (IJJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSet3DPosition
  (JNIEnv *, jclass, jint, jlong, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGet3DPosition
 * Signature: (IJJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGet3DPosition
  (JNIEnv *, jclass, jint, jlong, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetLength
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetLength
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSetPosition
 * Signature: (IJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSetPosition
  (JNIEnv *, jclass, jint, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetPosition
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetPosition
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetLevel
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetLevel
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelGetData
 * Signature: (ILjava/nio/ByteBuffer;JI)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelGetData
  (JNIEnv *, jclass, jint, jobject, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSetSync
 * Signature: (IIJZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSetSync
  (JNIEnv *, jclass, jint, jint, jlong, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelRemoveSync
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelRemoveSync
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSetDSP
 * Signature: (IZJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSetDSP
  (JNIEnv *, jclass, jint, jboolean, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelRemoveDSP
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelRemoveDSP
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSetLink
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSetLink
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelRemoveLink
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelRemoveLink
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelSetFX
 * Signature: (III)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelSetFX
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ChannelRemoveFX
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ChannelRemoveFX
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FXSetParameters
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FXSetParameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FXGetParameters
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FXGetParameters
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FXReset
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FXReset
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_GetVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1GetVersion
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_Start
 * Signature: (I[BIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1Start
  (JNIEnv *, jclass, jint, jbyteArray, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_StartLimit
 * Signature: (I[BIZJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1StartLimit
  (JNIEnv *, jclass, jint, jbyteArray, jint, jboolean, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_AddChunk
 * Signature: (J[BJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1AddChunk
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_IsActive
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1IsActive
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_Stop
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1Stop
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_StopEx
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1StopEx
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_SetPaused
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1SetPaused
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_Write
 * Signature: (IJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1Write
  (JNIEnv *, jclass, jint, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_SetNotify
 * Signature: (IZJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1SetNotify
  (JNIEnv *, jclass, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_GetCount
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1GetCount
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_SetChannel
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1SetChannel
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_GetChannel
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1GetChannel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_CastInit
 * Signature: (J[B[B[B[B[B[B[B[BIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1CastInit
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jint, jboolean);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_CastSetTitle
 * Signature: (J[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1CastSetTitle
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_CastGetStats
 * Signature: (JI[B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1CastGetStats
  (JNIEnv *, jclass, jlong, jint, jbyteArray);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_ServerInit
 * Signature: (J[BIIIZJ)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1ServerInit
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Encode_ServerKick
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Encode_1ServerKick
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FLAC_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FLAC_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FLAC_StreamCreateURL
 * Signature: ([BIIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FLAC_1StreamCreateURL
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FLAC_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FLAC_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamCreate
 * Signature: (III)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamCreate
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamCreateFile
 * Signature: (ZJJJII)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamCreateURL
 * Signature: ([BIIZJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamCreateURL
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamCreateFileUser
 * Signature: (IIJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamGetMark
 * Signature: (JIILjava/nio/IntBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamGetMark
  (JNIEnv *, jclass, jlong, jint, jint, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamSetFonts
 * Signature: (JJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamSetFonts
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamGetFonts
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamGetFonts
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamLoadSamples
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamLoadSamples
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamEvent
 * Signature: (JIII)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamEvent
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamEvents
 * Signature: (JIJI)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamEvents
  (JNIEnv *, jclass, jlong, jint, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamGetEvent
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamGetEvent
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamGetEvents
 * Signature: (JIIJ)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamGetEvents
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_StreamGetChannel
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1StreamGetChannel
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontInit
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontInit
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontFree
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontGetInfo
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontGetInfo
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontGetPreset
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontGetPreset
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontLoad
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontLoad
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontCompact
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontCompact
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontPack
 * Signature: (JJJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontPack
  (JNIEnv *, jclass, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontUnpack
 * Signature: (JJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontUnpack
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontSetVolume
 * Signature: (JF)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontSetVolume
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_FontGetVolume
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1FontGetVolume
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_InGetDeviceInfo
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1InGetDeviceInfo
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_InInit
 * Signature: (IZJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1InInit
  (JNIEnv *, jclass, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_InFree
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1InFree
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_InStart
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1InStart
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MIDI_InStop
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MIDI_1InStop
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_GetVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1GetVersion
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_StreamCreate
 * Signature: (III)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1StreamCreate
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_StreamAddChannel
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1StreamAddChannel
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_StreamAddChannelEx
 * Signature: (JIIJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1StreamAddChannelEx
  (JNIEnv *, jclass, jlong, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelGetMixer
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelGetMixer
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelFlags
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelFlags
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelRemove
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelRemove
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelSetPosition
 * Signature: (IJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelSetPosition
  (JNIEnv *, jclass, jint, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelGetPosition
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelGetPosition
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelGetPositionEx
 * Signature: (III)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelGetPositionEx
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelGetLevel
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelGetLevel
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelGetData
 * Signature: (IJI)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelGetData
  (JNIEnv *, jclass, jint, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelSetSync
 * Signature: (IIJZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelSetSync
  (JNIEnv *, jclass, jint, jint, jlong, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelRemoveSync
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelRemoveSync
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelSetMatrix
 * Signature: (ILjava/nio/FloatBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelSetMatrix
  (JNIEnv *, jclass, jint, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelGetMatrix
 * Signature: (ILjava/nio/FloatBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelGetMatrix
  (JNIEnv *, jclass, jint, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelSetEnvelope
 * Signature: (IIJI)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelSetEnvelope
  (JNIEnv *, jclass, jint, jint, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelSetEnvelopePos
 * Signature: (IIJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelSetEnvelopePos
  (JNIEnv *, jclass, jint, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Mixer_ChannelGetEnvelopePos
 * Signature: (IILjava/nio/FloatBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Mixer_1ChannelGetEnvelopePos
  (JNIEnv *, jclass, jint, jint, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Split_StreamCreate
 * Signature: (IILjava/nio/IntBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Split_1StreamCreate
  (JNIEnv *, jclass, jint, jint, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Split_StreamGetSource
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Split_1StreamGetSource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Split_StreamGetSplits
 * Signature: (IJI)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Split_1StreamGetSplits
  (JNIEnv *, jclass, jint, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Split_StreamReset
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Split_1StreamReset
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Split_StreamResetEx
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Split_1StreamResetEx
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_Split_StreamGetAvailable
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1Split_1StreamGetAvailable
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_WV_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1WV_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_WV_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1WV_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_AAC_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1AAC_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_AAC_StreamCreateURL
 * Signature: ([BIIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1AAC_1StreamCreateURL
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_AAC_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1AAC_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MP4_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MP4_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MP4_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MP4_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_AC3_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1AC3_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_AC3_StreamCreateURL
 * Signature: ([BIIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1AC3_1StreamCreateURL
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_AC3_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1AC3_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ALAC_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ALAC_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_ALAC_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1ALAC_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_GetVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1GetVersion
  (JNIEnv *, jclass);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_TempoCreate
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1TempoCreate
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_TempoGetSource
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1TempoGetSource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_TempoGetRateRatio
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1TempoGetRateRatio
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_ReverseCreate
 * Signature: (IFI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1ReverseCreate
  (JNIEnv *, jclass, jint, jfloat, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_ReverseGetSource
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1ReverseGetSource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_DecodeGet
 * Signature: (IDDIIZ)F
 */
JNIEXPORT jfloat JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1DecodeGet
  (JNIEnv *, jclass, jint, jdouble, jdouble, jint, jint, jboolean);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_CallbackSet
 * Signature: (IZDIIJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1CallbackSet
  (JNIEnv *, jclass, jint, jboolean, jdouble, jint, jint, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_CallbackReset
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1CallbackReset
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_Translate
 * Signature: (IFI)F
 */
JNIEXPORT jfloat JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1Translate
  (JNIEnv *, jclass, jint, jfloat, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_Free
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1Free
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_BeatCallbackSet
 * Signature: (IZJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1BeatCallbackSet
  (JNIEnv *, jclass, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_BeatCallbackReset
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1BeatCallbackReset
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_BeatDecodeGet
 * Signature: (IDDIZJ)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1BeatDecodeGet
  (JNIEnv *, jclass, jint, jdouble, jdouble, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_BeatSetParameters
 * Signature: (IFFF)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1BeatSetParameters
  (JNIEnv *, jclass, jint, jfloat, jfloat, jfloat);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_BeatGetParameters
 * Signature: (ILjava/nio/FloatBuffer;JLjava/nio/FloatBuffer;JLjava/nio/FloatBuffer;J)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1BeatGetParameters
  (JNIEnv *, jclass, jint, jobject, jlong, jobject, jlong, jobject, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_FX_BPM_BeatFree
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1FX_1BPM_1BeatFree
  (JNIEnv *, jclass, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MPC_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MPC_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MPC_StreamCreateURL
 * Signature: ([BIIZJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MPC_1StreamCreateURL
  (JNIEnv *, jclass, jbyteArray, jint, jint, jboolean, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_MPC_StreamCreateFileUser
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1MPC_1StreamCreateFileUser
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     jouvieje_bass_BassJNI
 * Method:    Bass_BASS_SPX_StreamCreateFile
 * Signature: (ZJJJI)J
 */
JNIEXPORT jlong JNICALL Java_jouvieje_bass_BassJNI_Bass_1BASS_1SPX_1StreamCreateFile
  (JNIEnv *, jclass, jboolean, jlong, jlong, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
